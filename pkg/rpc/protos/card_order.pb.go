// Code generated by protoc-gen-go. DO NOT EDIT.
// source: card_order.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateOrderRequest struct {
	ShopId  uint64 `protobuf:"varint,1,opt,name=shopId" json:"shopId,omitempty"`
	UserId  uint64 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	CardId  uint64 `protobuf:"varint,3,opt,name=cardId" json:"cardId,omitempty"`
	ItemId  uint64 `protobuf:"varint,4,opt,name=itemId" json:"itemId,omitempty"`
	Amount  uint64 `protobuf:"varint,5,opt,name=amount" json:"amount,omitempty"`
	Summary string `protobuf:"bytes,6,opt,name=summary" json:"summary,omitempty"`
}

func (m *CreateOrderRequest) Reset()                    { *m = CreateOrderRequest{} }
func (m *CreateOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOrderRequest) ProtoMessage()               {}
func (*CreateOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *CreateOrderRequest) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *CreateOrderRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateOrderRequest) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *CreateOrderRequest) GetItemId() uint64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *CreateOrderRequest) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateOrderRequest) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

type CreateOrderReply struct {
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
	Err     *Error `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *CreateOrderReply) Reset()                    { *m = CreateOrderReply{} }
func (m *CreateOrderReply) String() string            { return proto.CompactTextString(m) }
func (*CreateOrderReply) ProtoMessage()               {}
func (*CreateOrderReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *CreateOrderReply) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *CreateOrderReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

type FinishOrderRequest struct {
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *FinishOrderRequest) Reset()                    { *m = FinishOrderRequest{} }
func (m *FinishOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*FinishOrderRequest) ProtoMessage()               {}
func (*FinishOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *FinishOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type FinishOrderReply struct {
	Order *Order `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
	Err   *Error `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *FinishOrderReply) Reset()                    { *m = FinishOrderReply{} }
func (m *FinishOrderReply) String() string            { return proto.CompactTextString(m) }
func (*FinishOrderReply) ProtoMessage()               {}
func (*FinishOrderReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *FinishOrderReply) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *FinishOrderReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

type Order struct {
	OrderId    uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
	ShopId     uint64 `protobuf:"varint,2,opt,name=shopId" json:"shopId,omitempty"`
	UserId     uint64 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	CardId     uint64 `protobuf:"varint,4,opt,name=cardId" json:"cardId,omitempty"`
	ItemId     uint64 `protobuf:"varint,5,opt,name=itemId" json:"itemId,omitempty"`
	Amount     uint64 `protobuf:"varint,6,opt,name=amount" json:"amount,omitempty"`
	Status     uint32 `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	Summary    string `protobuf:"bytes,8,opt,name=summary" json:"summary,omitempty"`
	CreateTime uint64 `protobuf:"varint,9,opt,name=createTime" json:"createTime,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *Order) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *Order) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *Order) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Order) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *Order) GetItemId() uint64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *Order) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Order) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Order) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type GetOrderRequest struct {
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *GetOrderRequest) Reset()                    { *m = GetOrderRequest{} }
func (m *GetOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrderRequest) ProtoMessage()               {}
func (*GetOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *GetOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type GetOrderReply struct {
	Err   *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Order *Order `protobuf:"bytes,2,opt,name=order" json:"order,omitempty"`
}

func (m *GetOrderReply) Reset()                    { *m = GetOrderReply{} }
func (m *GetOrderReply) String() string            { return proto.CompactTextString(m) }
func (*GetOrderReply) ProtoMessage()               {}
func (*GetOrderReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *GetOrderReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *GetOrderReply) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type GetOrderListRequest struct {
	Page     uint64 `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	PageSize uint64 `protobuf:"varint,2,opt,name=pageSize" json:"pageSize,omitempty"`
	OrderId  uint64 `protobuf:"varint,3,opt,name=orderId" json:"orderId,omitempty"`
	ShopId   uint64 `protobuf:"varint,4,opt,name=shopId" json:"shopId,omitempty"`
	CardId   uint64 `protobuf:"varint,5,opt,name=cardId" json:"cardId,omitempty"`
	ItemId   uint64 `protobuf:"varint,6,opt,name=itemId" json:"itemId,omitempty"`
	// 创建订单的时间区间
	CreateTime *TimeRange `protobuf:"bytes,7,opt,name=createTime" json:"createTime,omitempty"`
	// 下单用户 ID
	UserId uint64 `protobuf:"varint,8,opt,name=userId" json:"userId,omitempty"`
	// 状态
	Status uint32 `protobuf:"varint,9,opt,name=status" json:"status,omitempty"`
}

func (m *GetOrderListRequest) Reset()                    { *m = GetOrderListRequest{} }
func (m *GetOrderListRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrderListRequest) ProtoMessage()               {}
func (*GetOrderListRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *GetOrderListRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetOrderListRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetOrderListRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *GetOrderListRequest) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *GetOrderListRequest) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *GetOrderListRequest) GetItemId() uint64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *GetOrderListRequest) GetCreateTime() *TimeRange {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *GetOrderListRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetOrderListRequest) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type GetOrderListReply struct {
	Err       *Error   `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	OrderList []*Order `protobuf:"bytes,2,rep,name=orderList" json:"orderList,omitempty"`
	Count     uint64   `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *GetOrderListReply) Reset()                    { *m = GetOrderListReply{} }
func (m *GetOrderListReply) String() string            { return proto.CompactTextString(m) }
func (*GetOrderListReply) ProtoMessage()               {}
func (*GetOrderListReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *GetOrderListReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *GetOrderListReply) GetOrderList() []*Order {
	if m != nil {
		return m.OrderList
	}
	return nil
}

func (m *GetOrderListReply) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TimeRange struct {
	// 开始时间
	StartTime uint64 `protobuf:"varint,1,opt,name=startTime" json:"startTime,omitempty"`
	// 结束时间
	EndTime uint64 `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
}

func (m *TimeRange) Reset()                    { *m = TimeRange{} }
func (m *TimeRange) String() string            { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()               {}
func (*TimeRange) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *TimeRange) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *TimeRange) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateOrderRequest)(nil), "card.pkg.rpc.protos.CreateOrderRequest")
	proto.RegisterType((*CreateOrderReply)(nil), "card.pkg.rpc.protos.CreateOrderReply")
	proto.RegisterType((*FinishOrderRequest)(nil), "card.pkg.rpc.protos.FinishOrderRequest")
	proto.RegisterType((*FinishOrderReply)(nil), "card.pkg.rpc.protos.FinishOrderReply")
	proto.RegisterType((*Order)(nil), "card.pkg.rpc.protos.Order")
	proto.RegisterType((*GetOrderRequest)(nil), "card.pkg.rpc.protos.GetOrderRequest")
	proto.RegisterType((*GetOrderReply)(nil), "card.pkg.rpc.protos.GetOrderReply")
	proto.RegisterType((*GetOrderListRequest)(nil), "card.pkg.rpc.protos.GetOrderListRequest")
	proto.RegisterType((*GetOrderListReply)(nil), "card.pkg.rpc.protos.GetOrderListReply")
	proto.RegisterType((*TimeRange)(nil), "card.pkg.rpc.protos.TimeRange")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OrderController service

type OrderControllerClient interface {
	// 创建购买订单
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderReply, error)
	// 完成订单
	FinishOrder(ctx context.Context, in *FinishOrderRequest, opts ...grpc.CallOption) (*FinishOrderReply, error)
	// 获取订单信息
	GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*GetOrderReply, error)
	// 获取订单列表
	GetOrderList(ctx context.Context, in *GetOrderListRequest, opts ...grpc.CallOption) (*GetOrderListReply, error)
}

type orderControllerClient struct {
	cc *grpc.ClientConn
}

func NewOrderControllerClient(cc *grpc.ClientConn) OrderControllerClient {
	return &orderControllerClient{cc}
}

func (c *orderControllerClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderReply, error) {
	out := new(CreateOrderReply)
	err := grpc.Invoke(ctx, "/card.pkg.rpc.protos.OrderController/CreateOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) FinishOrder(ctx context.Context, in *FinishOrderRequest, opts ...grpc.CallOption) (*FinishOrderReply, error) {
	out := new(FinishOrderReply)
	err := grpc.Invoke(ctx, "/card.pkg.rpc.protos.OrderController/FinishOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*GetOrderReply, error) {
	out := new(GetOrderReply)
	err := grpc.Invoke(ctx, "/card.pkg.rpc.protos.OrderController/GetOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) GetOrderList(ctx context.Context, in *GetOrderListRequest, opts ...grpc.CallOption) (*GetOrderListReply, error) {
	out := new(GetOrderListReply)
	err := grpc.Invoke(ctx, "/card.pkg.rpc.protos.OrderController/GetOrderList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrderController service

type OrderControllerServer interface {
	// 创建购买订单
	CreateOrder(context.Context, *CreateOrderRequest) (*CreateOrderReply, error)
	// 完成订单
	FinishOrder(context.Context, *FinishOrderRequest) (*FinishOrderReply, error)
	// 获取订单信息
	GetOrder(context.Context, *GetOrderRequest) (*GetOrderReply, error)
	// 获取订单列表
	GetOrderList(context.Context, *GetOrderListRequest) (*GetOrderListReply, error)
}

func RegisterOrderControllerServer(s *grpc.Server, srv OrderControllerServer) {
	s.RegisterService(&_OrderController_serviceDesc, srv)
}

func _OrderController_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.pkg.rpc.protos.OrderController/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_FinishOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinishOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).FinishOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.pkg.rpc.protos.OrderController/FinishOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).FinishOrder(ctx, req.(*FinishOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.pkg.rpc.protos.OrderController/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).GetOrder(ctx, req.(*GetOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_GetOrderList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).GetOrderList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.pkg.rpc.protos.OrderController/GetOrderList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).GetOrderList(ctx, req.(*GetOrderListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "card.pkg.rpc.protos.OrderController",
	HandlerType: (*OrderControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _OrderController_CreateOrder_Handler,
		},
		{
			MethodName: "FinishOrder",
			Handler:    _OrderController_FinishOrder_Handler,
		},
		{
			MethodName: "GetOrder",
			Handler:    _OrderController_GetOrder_Handler,
		},
		{
			MethodName: "GetOrderList",
			Handler:    _OrderController_GetOrderList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "card_order.proto",
}

func init() { proto.RegisterFile("card_order.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 581 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x4d, 0x6f, 0xd3, 0x30,
	0x18, 0xc7, 0x97, 0xa6, 0xe9, 0x9a, 0x67, 0x4c, 0xeb, 0x3c, 0x84, 0xac, 0x08, 0x4d, 0x95, 0xc5,
	0x4b, 0x25, 0x50, 0x84, 0xc6, 0x85, 0x13, 0x07, 0x2a, 0x40, 0x95, 0x90, 0x90, 0x02, 0xe2, 0xb0,
	0xcb, 0x94, 0x35, 0x56, 0x17, 0xd1, 0xc4, 0xc1, 0x71, 0x0e, 0xe5, 0x4b, 0x20, 0x4e, 0x7c, 0x03,
	0xbe, 0x1c, 0x5f, 0x02, 0xd9, 0x4e, 0x1a, 0xa7, 0xab, 0xd7, 0xee, 0xd4, 0x3e, 0x7f, 0xff, 0xed,
	0xe7, 0xe5, 0xe7, 0x18, 0x46, 0xf3, 0x98, 0x27, 0x57, 0x8c, 0x27, 0x94, 0x87, 0x05, 0x67, 0x82,
	0xa1, 0x33, 0xa9, 0x84, 0xc5, 0xf7, 0x45, 0xc8, 0x8b, 0xb9, 0xd6, 0xca, 0xe0, 0x54, 0xd9, 0xe6,
	0x2c, 0xcb, 0x58, 0xae, 0x35, 0xf2, 0xd7, 0x01, 0x34, 0xe5, 0x34, 0x16, 0xf4, 0xb3, 0xdc, 0x1d,
	0xd1, 0x1f, 0x15, 0x2d, 0x05, 0x7a, 0x04, 0x83, 0xf2, 0x86, 0x15, 0xb3, 0x04, 0x3b, 0x63, 0x67,
	0xd2, 0x8f, 0xea, 0x48, 0xea, 0x55, 0x49, 0xf9, 0x2c, 0xc1, 0x3d, 0xad, 0xeb, 0x48, 0xea, 0xf2,
	0xec, 0x59, 0x82, 0x5d, 0xad, 0xeb, 0x48, 0xea, 0xa9, 0xa0, 0xd9, 0x2c, 0xc1, 0x7d, 0xad, 0xeb,
	0x48, 0xea, 0x71, 0xc6, 0xaa, 0x5c, 0x60, 0x4f, 0xeb, 0x3a, 0x42, 0x18, 0x0e, 0xcb, 0x2a, 0xcb,
	0x62, 0xbe, 0xc2, 0x83, 0xb1, 0x33, 0xf1, 0xa3, 0x26, 0x24, 0x97, 0x30, 0xea, 0xd4, 0x59, 0x2c,
	0x57, 0xd2, 0xad, 0x7a, 0x5e, 0x97, 0xd9, 0x84, 0xe8, 0x25, 0xb8, 0x94, 0x73, 0x55, 0xe4, 0xd1,
	0x45, 0x10, 0x6e, 0x19, 0x46, 0xf8, 0x9e, 0x73, 0xc6, 0x23, 0x69, 0x23, 0x21, 0xa0, 0x0f, 0x69,
	0x9e, 0x96, 0x37, 0x9d, 0x19, 0x58, 0x4f, 0x27, 0x1c, 0x46, 0x1d, 0xbf, 0xac, 0xe5, 0x15, 0x78,
	0x6a, 0x59, 0x79, 0x6d, 0x39, 0xb5, 0x5f, 0x1b, 0xef, 0x59, 0xe3, 0x3f, 0x07, 0x3c, 0xb5, 0xfd,
	0x8e, 0xae, 0x5b, 0x6a, 0x3d, 0x0b, 0x35, 0xd7, 0x42, 0xad, 0x6f, 0xa1, 0xe6, 0x59, 0xa8, 0x0d,
	0x3a, 0xd4, 0x64, 0x5e, 0x11, 0x8b, 0xaa, 0xc4, 0x87, 0x63, 0x67, 0x72, 0x1c, 0xd5, 0x91, 0x49,
	0x73, 0xd8, 0xa1, 0x89, 0xce, 0x01, 0xe6, 0x8a, 0xe6, 0xd7, 0x34, 0xa3, 0xd8, 0x57, 0xa7, 0x19,
	0x0a, 0x79, 0x01, 0x27, 0x1f, 0xa9, 0xd8, 0x13, 0x07, 0x83, 0xe3, 0xd6, 0x2c, 0x59, 0xd4, 0x93,
	0x75, 0xf6, 0x9a, 0x6c, 0x4b, 0xae, 0xb7, 0x27, 0x39, 0xf2, 0xa7, 0x07, 0x67, 0x4d, 0xc6, 0x4f,
	0x69, 0x29, 0x9a, 0x12, 0x11, 0xf4, 0x8b, 0x78, 0x41, 0xeb, 0xfa, 0xd4, 0x7f, 0x14, 0xc0, 0x50,
	0xfe, 0x7e, 0x49, 0x7f, 0xd2, 0x9a, 0xca, 0x3a, 0x36, 0x5b, 0x72, 0x6d, 0x24, 0xfb, 0x9b, 0x24,
	0x6b, 0x62, 0x9e, 0x85, 0xd8, 0xa0, 0x43, 0xec, 0x6d, 0x67, 0xce, 0x87, 0xaa, 0xc1, 0xf3, 0xad,
	0x0d, 0x4a, 0x43, 0x14, 0xe7, 0x0b, 0x6a, 0x72, 0x30, 0x6e, 0xce, 0x70, 0xf3, 0xe6, 0xd4, 0xc4,
	0x7d, 0x93, 0x38, 0xf9, 0xed, 0xc0, 0x69, 0x77, 0x32, 0xf7, 0xe7, 0xf1, 0x06, 0x7c, 0xd6, 0xec,
	0xc7, 0xbd, 0xb1, 0xbb, 0x83, 0x49, 0x6b, 0x46, 0x0f, 0xc1, 0x9b, 0xab, 0xeb, 0xa9, 0xa7, 0xa9,
	0x03, 0x32, 0x05, 0x7f, 0xdd, 0x1c, 0x7a, 0x0c, 0x7e, 0x29, 0x62, 0x2e, 0xd4, 0x3c, 0x34, 0xa7,
	0x56, 0x90, 0x40, 0x68, 0x9e, 0xa8, 0x35, 0xcd, 0xaa, 0x09, 0x2f, 0x7e, 0xb9, 0x70, 0xa2, 0xf2,
	0x4d, 0x59, 0x2e, 0x38, 0x5b, 0x2e, 0x29, 0x47, 0x57, 0x70, 0x64, 0x3c, 0x49, 0xe8, 0xf9, 0xd6,
	0x22, 0x6f, 0x3f, 0xae, 0xc1, 0xd3, 0xdd, 0xc6, 0x62, 0xb9, 0x22, 0x07, 0x32, 0x81, 0xf1, 0xce,
	0x58, 0x12, 0xdc, 0x7e, 0xb9, 0x2c, 0x09, 0x36, 0x9f, 0x2c, 0x72, 0x80, 0xbe, 0xc1, 0xb0, 0xa1,
	0x85, 0x9e, 0x6c, 0xdd, 0xb4, 0xf1, 0x15, 0x06, 0x64, 0x87, 0x4b, 0x9f, 0x7b, 0x0d, 0x0f, 0xcc,
	0x5b, 0x80, 0x26, 0x77, 0xee, 0x32, 0x3e, 0xa1, 0xe0, 0xd9, 0x1e, 0x4e, 0x95, 0xe3, 0xdd, 0xf0,
	0x72, 0xa0, 0x57, 0xaf, 0xf5, 0xef, 0xeb, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x8d, 0x58,
	0xe2, 0x06, 0x07, 0x00, 0x00,
}
